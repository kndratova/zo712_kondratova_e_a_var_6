✓ 1.   Описать три класса: базовый класс «Строка» и производные от него класс «Строка-идентификатор» и класс, заданный индивидуальным вариантом.

✓ 2. Обязательные для всех классов методы: конструктор без параметров, конструктор, принимающий в качестве параметра Си-строку,
конструктор копирования, деструктор, перегрузка операции присваивания «=». Во всех методах всех классов предусмотреть печать сообщения,
содержащего имя метода.

✓ 3.   Для конструкторов копирования каждого класса дополнительно предусмотреть диагностическую печать количества его вызовов,
рекомендуется использовать статические члены класса.

✓ 4.   Поля класса «Строка»: указатель на блок динамически выделенной памяти для размещения символов строки, длина строки в байтах.

✓ 5.   Обязательные методы, помимо вышеуказанных: конструктор, принимающий в качестве параметра символ (char), функция получения длины строки.

✓ 6.   Строки класса «Строка-идентификатор» строятся по правилам записи идентификаторов в Си, и могут включать в себя только те символы, которые могут входить в состав Си-идентификаторов.
Если исходные данные противоречат правилам записи идентификатора, то создается пустая «Строка-идентификатор».

✓ 7.   Дополнительные методы для класса «Строка-идентификатор»: поиск последнего вхождения символа в строку, переопределение операции проверки на равенство ==,
переопределение операции вычитания - (из первого операнда удаляются все символы, входящие во второй операнд)

✓ 8.   Производный от «Строки» класс Битовая строка
Строки данного класса могут содержать только символы '0' или '1'. Если в составе инициализирующей строки будут встречены любые символы, отличные от допустимых,
Битовая строка принимает нулевое значение. Содержимое данных строк рассматривается как двоичное число. Отрицательные числа хранятся в дополнительном коде

✓ 9.   Обязательные методы: инвертирование числа, проверки на равенство ==,сложения + (длина строки результата равна длине большей из строк, в случае необходимости,
более короткая битовая строка расширяется влево знаковым разрядом)

Написать тестовую программу, которая должна:

>   динамически выделить память под массив указателей на базовый класс (4-6 шт.);

>   в режиме диалога заполнить этот массив указателями на производные классы, при этом экземпляры производных классов должны создаваться динамически с заданием начальных значений;

>   для созданных экземпляров производных классов выполнить проверку всех разработанных методов с выводом исходных данных и результатов на дисплей.

----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Режим диалога должен обеспечиваться с помощью иерархического меню. Основные пункты:
1 «Инициализация». Подпункты:
    1.1. «Число элементов». Задает число элементов в массиве указателей на базовый класс. После ввода числа элементов пользоваться этим пунктом меню запрещается.
    1.2. «Начальное значение». С помощью этого пункта меню можно задать номер элемента, его тип и начальное значение. Задавать начальные значения и работать с другими
пунктами меню запрещается до тех пор, пока не будет задано число элементов. Допускается задать новое начальное значение несколько раз.
2 «Тестирование». Подпункты:
    2.1. «Строка».
    2.2. «Строка-идентификатор».
    2.3. Класс, соответствующий варианту задания.
    2.4. «Задать операнды».
После выбора одного из этих пунктов меню предлагается выбрать один из методов из списка всех обязательных методов (кроме конструкторов и деструкторов), связанных с
выбранным подпунктом.
3 Выход.
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
